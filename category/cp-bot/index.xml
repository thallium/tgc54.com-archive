<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cp-bot | Thallium54</title><link>https://tgc54.com/category/cp-bot/</link><atom:link href="https://tgc54.com/category/cp-bot/index.xml" rel="self" type="application/rss+xml"/><description>cp-bot</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Sun, 21 Aug 2022 21:41:46 -0400</lastBuildDate><image><url>https://tgc54.com/media/icon_hu423b19687c85b10febae54029c442fbf_4135_512x512_fill_lanczos_center_3.png</url><title>cp-bot</title><link>https://tgc54.com/category/cp-bot/</link></image><item><title>全新的开始 - 算法竞赛机器人开发日志2</title><link>https://tgc54.com/zh/post/cp-bot-dev-log-2/</link><pubDate>Sun, 21 Aug 2022 21:41:46 -0400</pubDate><guid>https://tgc54.com/zh/post/cp-bot-dev-log-2/</guid><description>&lt;p>这周没做什么大功能，做了下几件小事：&lt;/p>
&lt;h3 id="参数">参数&lt;/h3>
&lt;p>原来&lt;code>on_shell_command&lt;/code>就是专门负责这个的，可以传入一个argument parser，那这样就很简单了，于是给查比赛加了&lt;code>-n x&lt;/code>和&lt;code>--all&lt;/code>以显示前x条或者全部比赛。&lt;/p>
&lt;h3 id="数据库相关">数据库相关&lt;/h3>
&lt;p>最近了解到ORM（我真是孤陋寡闻现在才知道这个东西），于是决定放弃MongoDB还是用关系型数据库，但APScheduler的&lt;code>SQLAlchemyJobStore&lt;/code>好像没完全支持SQLAlchemy 2所以比赛提醒暂时就没法做可持久化了，但一想可持久化也没有太大的用，每次更新缓存的时候重新添加一遍提醒应该就够了。。。缓存的话到是弄完了但是没法测试，因为今天cf的API一直都是挂了的。说到ORM就不得不提重构的事：&lt;/p>
&lt;h3 id="重构">重构&lt;/h3>
&lt;p>现在&lt;code>Contest&lt;/code>类不再用&lt;code>NamedTuple&lt;/code>了，因为可以和ORM（用的SQLModel）的Model共用一个类，而且SQLModel的model也是Pydantic model所以可以直接用&lt;code>parse_obj&lt;/code>，比之前&lt;code>NamedTuple&lt;/code>优雅多了。不得不说SQLModel的理念真的很有想法。&lt;/p>
&lt;h3 id="latex插件">LaTex插件&lt;/h3>
&lt;p>受群友的提示写了个渲染LaTex的插件，试了Matplotlib和SymPy的latex功能都不太满意，最后基于SymPy的&lt;code>preview&lt;/code>函数自己写了个插件。&lt;/p>
&lt;p>TODO：&lt;/p>
&lt;ul>
&lt;li>缓存和提醒&lt;/li>
&lt;li>继续研究TLE的代码看看有没有好玩的功能&lt;/li>
&lt;li>把代码整理好开源到github上&lt;/li>
&lt;/ul></description></item><item><title>全新的开始 - 算法竞赛机器人开发日志1</title><link>https://tgc54.com/zh/post/cp-bot-dev-log-1/</link><pubDate>Mon, 15 Aug 2022 21:46:28 -0400</pubDate><guid>https://tgc54.com/zh/post/cp-bot-dev-log-1/</guid><description>&lt;p>我的机器人，明明只有两个功能，却已重写了两次了，第一次从C++搬到Python，现在又从Python搬到Nonebot框架上（虽说还是Python)，以后应该不会再动了。这次搬迁起源于周六在给上一版本写readme，准备发布到GitHub上，当时我在特点里写下了&lt;/p>
&lt;blockquote>
&lt;p>不使用框架（可能是个错误的决定）&lt;/p>
&lt;/blockquote>
&lt;p>然后我就不禁思考这到底是不是个错误的决定：当初不用框架的原因也很简单，就是不想学框架的那一套，然后又觉得自己造点轮子也挺好玩的，但后来发现自己需要造的轮子越来越大时就不那么好玩了，目前有几个大轮子要造：&lt;/p>
&lt;ul>
&lt;li>命令与参数系统，如果将来命令增多的话一堆if else加字符串匹配又麻烦又丑&lt;/li>
&lt;li>定时命令，比赛提醒是我接下来想做的一大特性，因为我老是忘AtCoder的比赛&lt;/li>
&lt;li>配置系统，要是将来别人要用的话一定要做好配置系统&lt;/li>
&lt;/ul>
&lt;p>于是我又看了看Nonebot的文档，发现好像也没那么麻烦，而且自带命令与定时系统，又想到框架难道不就是为了让开发者专注于编写业务逻辑吗？于是就想先试试看，然后第二天早上加中午吃完饭一点时间就基本搬过去了，又看到非常fancy的log界面就决定完全转到Nonebot上了。&lt;/p>
&lt;p>那又为什么要写开发日志捏？因为机器人其实好久没再继续开发了，自从前两周发现了APScheduler之后就开始研究加缓存与比赛提醒的功能，然后就萌生了写日志的想法，这次搬迁又差不多算是“从头开始”所以就每周写一篇开发日志记录本周工作以及接下来要做的任务，顺便起到督促自己的作用。&lt;/p>
&lt;p>第一篇（这篇）本来应该周日写的来着，结果周日出去玩由于突发情况回来的很晚，基本上接着就上床睡觉了。以后日志争取在周末写，这次由于背景介绍所以稍长，以后应该就简单记录一下。&lt;/p>
&lt;p>上周工作：&lt;/p>
&lt;ul>
&lt;li>基本完成搬运，两个命令已可用，但缓存还没搞定&lt;/li>
&lt;li>一些重构：重命名，添加type hint&lt;/li>
&lt;li>变成包之后import语句要变成类似&lt;code>from . import xxx&lt;/code>，把所有import都修了（还挺多的）&lt;/li>
&lt;/ul>
&lt;p>TODO：&lt;/p>
&lt;ul>
&lt;li>参数系统，查比赛命令挺需要的
&lt;ul>
&lt;li>画图功能也很需要&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>看看内置的scheduler能不能用数据库的job store，如果能的话：
&lt;ul>
&lt;li>尽快能把缓存弄好&lt;/li>
&lt;li>比赛提醒&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>根据配置开关某些功能，比如是否使用缓存&lt;/li>
&lt;li>重构一些抄的TLE的代码，感觉不是很喜欢TLE的一些设计&lt;/li>
&lt;li>搬一些TLE其他的有趣的功能&lt;/li>
&lt;/ul></description></item></channel></rss>