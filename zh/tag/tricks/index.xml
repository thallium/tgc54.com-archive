<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tricks | Thallium54</title><link>https://tgc54.com/zh/tag/tricks/</link><atom:link href="https://tgc54.com/zh/tag/tricks/index.xml" rel="self" type="application/rss+xml"/><description>Tricks</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh-Hans</language><lastBuildDate>Fri, 22 Jul 2022 09:51:55 -0400</lastBuildDate><image><url>https://tgc54.com/media/icon_hu423b19687c85b10febae54029c442fbf_4135_512x512_fill_lanczos_center_3.png</url><title>Tricks</title><link>https://tgc54.com/zh/tag/tricks/</link></image><item><title>用Clang打包C++代码</title><link>https://tgc54.com/zh/post/bundle-cpp-code/</link><pubDate>Fri, 22 Jul 2022 09:51:55 -0400</pubDate><guid>https://tgc54.com/zh/post/bundle-cpp-code/</guid><description>&lt;p>作为一名算法竞赛选手，我一直在寻找避免复制粘贴板子的方法，这样我就的板子库就能更加复杂。&lt;/p>
&lt;p>受&lt;a href="https://codeforces.com/profile/Egor" target="_blank" rel="noopener">Egor&lt;/a>的rust bundler启发，我不禁想C++也有没有相似的东西? 于是想起来很久之前看过&lt;a href="https://codeforces.com/blog/entry/77139" target="_blank" rel="noopener">这个博客&lt;/a>然后我就话了点时间又找到了那篇博文，但并不是bundler而且看起来很复杂。评论区里有人提到用&lt;code>cpp&lt;/code>这个预处理命令。也许你知道，&lt;code>#include&lt;/code>基本就是复制粘贴所以看起来好像有戏，但问题是预处理也会复制粘贴标准库，大概有20多万行。所以我继续搜寻能不能跳过系统头文件，然后就找到了&lt;a href="https://stackoverflow.com/a/20889599" target="_blank" rel="noopener">这个&lt;/a>，但只有clang才能用，因为我自己也用clang所以就没再找gcc的解决办法。&lt;/p>
&lt;p>命令如下&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">clang++ -I/your/path/to/library/ -E -P -nostdinc++ -nobuiltininc main.cpp &amp;gt; bundled.cpp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>解释：&lt;/p>
&lt;ul>
&lt;li>&lt;code>-E&lt;/code> 只进行预处理&lt;/li>
&lt;li>&lt;code>-P&lt;/code> 关闭在预处理中生成行标记&lt;/li>
&lt;li>&lt;code>-nostdinc++&lt;/code> 关闭C++标准库&lt;/li>
&lt;li>&lt;code>-nobuiltininc&lt;/code> 关闭内置的#include目录（不太知道什么意思，可能没用）&lt;/li>
&lt;/ul>
&lt;p>因为系统头文件不会被保留，所以需要另一条命令把体统头文件加上，然后我就写了一个shell函数一起做这两件事：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">expand_cpp &lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> clang++ -I/your/path/to/library/ -E -P -nostdinc++ -nobuiltininc &lt;span class="nv">$1&lt;/span> &amp;gt; bundled.cpp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> gsed -i &lt;span class="s2">&amp;#34;1s/^/#include &amp;lt;bits\/stdc++.h&amp;gt;\n/&amp;#34;&lt;/span> bundled.cpp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>