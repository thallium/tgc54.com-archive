<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>博弈论 | Thallium54</title><link>https://tgc54.com/zh/tag/%E5%8D%9A%E5%BC%88%E8%AE%BA/</link><atom:link href="https://tgc54.com/zh/tag/%E5%8D%9A%E5%BC%88%E8%AE%BA/index.xml" rel="self" type="application/rss+xml"/><description>博弈论</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh-Hans</language><lastBuildDate>Fri, 04 Oct 2019 00:00:00 +0000</lastBuildDate><image><url>https://tgc54.com/media/icon_hu423b19687c85b10febae54029c442fbf_4135_512x512_fill_lanczos_center_3.png</url><title>博弈论</title><link>https://tgc54.com/zh/tag/%E5%8D%9A%E5%BC%88%E8%AE%BA/</link></image><item><title>博弈论入门学习笔记</title><link>https://tgc54.com/zh/post/game_theory/</link><pubDate>Fri, 04 Oct 2019 00:00:00 +0000</pubDate><guid>https://tgc54.com/zh/post/game_theory/</guid><description>&lt;p>几个月前的笔记，才疏学浅，仅供参考~&lt;/p>
&lt;h1 id="基本概念">基本概念&lt;/h1>
&lt;h2 id="pn点">PN点&lt;/h2>
&lt;h3 id="什么是pn点">什么是PN点&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>P点：前一个选手（previous person)将取胜的点，即必败点。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>N点：下一个选手（next person)将取胜的点，即必胜点。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>注意：PN点是相对于某个点的属性，与先后手无关，所以我们可以说&lt;strong>先手的P点&lt;/strong>或&lt;strong>后手的P点&lt;/strong>，也就是说无论是先手还时后手，走到P点都是必败的。&lt;/p>
&lt;h3 id="pn点的属性">PN点的属性&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>所有终结状态均为P点。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>从任何N点都至少有一种方法进入P点。（当前玩家的必胜点一定可以走到下一个玩家的必败点）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>从P点只能进入N点。（如果能走到P点的话就相当于胜负局势变化了，这样就不是必败的了）&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>注意：这里说的都是走到最后状态的玩家获胜的游戏。&lt;/p>
&lt;h2 id="sg函数">SG函数&lt;/h2>
&lt;p>如果游戏条件比较复杂，为了判断每个点的胜负状态，就需要引入SG函数。&lt;/p>
&lt;h3 id="定义">定义：&lt;/h3>
&lt;p>$$sg(u)=mex{sg(v)} $$&lt;/p>
&lt;p>其中v为u的后继状态，mex函数是作用于整数集合的函数，函数值是不属于该集合的最小自然数。&lt;/p>
&lt;p>$$mex(A)=min{k | k\in\complement_NA}$$&lt;/p>
&lt;p>那么，终止状态的SG值显然为0，并且SG值为0的状态就是P状态，SG值不为0的状态就是N状态。
证明则非常显然，SG值为0的状态，说明它的所有后继状态都不为0，也就是它只能转移到非0状态，而SG值不为0的状态则不一样，后继状态一定有0，可能有其他非负整数。那么SG值为0的状态就是必败状态的定义，SG值不为0的状态就是必胜状态的定。&lt;/p>
&lt;h3 id="求法">求法&lt;/h3>
&lt;p>从定义可以看出sg函数使用的递归定义，所以我们既可以从sg为0的状态递推，也可以采用递归的方法求。&lt;/p>
&lt;p>有些题目的sg函数的有规律的，通过打表或者思考可以发现规律;有些是没有规律的，需要自己写sg函数来打表。&lt;/p>
&lt;p>一般的sg函数打表模板：
注：需要打表的一般是简单的取石子游戏，且在取石子的数量上有限制。这种问题的状态方便用数字表示，所以实现简单。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">bool&lt;/span> &lt;span class="n">flag&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">N&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="n">sg&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">N&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">getsg&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">for1&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">N&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ms&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">flag&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//枚举后继状态
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="n">K&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="c1">//K为能取不同个数石子的种类数
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">flag&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">sg&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">shizi&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]]]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//找mex
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">forn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">N&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">flag&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">sg&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>有规律的sg函数:&lt;a href="https://cn.vjudge.net/problem/HDU-1847" target="_blank" rel="noopener">HDU-1847&lt;/a>&lt;/p>
&lt;p>打表可发现sg函数是0，1，2，0，1，2……变化的。&lt;/p>
&lt;p>稍微难一点找规律：&lt;a href="https://cn.vjudge.net/problem/LightOJ-1296" target="_blank" rel="noopener">LightOJ-1296&lt;/a>&lt;/p>
&lt;p>规律：如果n是奇数gx(n)=gx(n/2),如果为偶数，gx(x)=x/2;&lt;/p>
&lt;p>需要打表的题：&lt;a href="https://cn.vjudge.net/problem/HDU-1848" target="_blank" rel="noopener">HDU-1848&lt;/a>&lt;/p>
&lt;h1 id="巴什博弈">巴什博弈&lt;/h1>
&lt;h2 id="题目描述">题目描述&lt;/h2>
&lt;p>只有一堆n个石子，两个人轮流从这堆石子中取石子，规定每次至少取一个，最多取m个，最后取完的人获胜。&lt;/p>
&lt;h2 id="分析">分析&lt;/h2>
&lt;ol>
&lt;li>当n = m+1 的时候，由于先手最多取走m个，无论其取走多少个，剩下的后手均可以一次取完，显然后手胜。&lt;/li>
&lt;li>根据以上分析，我们可以将n写成 $n=k(m+1)+r$ 的形式。对于先手玩家，我们可以取走r个，给对方造成剩下$k(m+1)$的情形。此时无论对手取走多少个，假设对手取走n个， 我们一定可以做到取走 $m+1-n$个，此时剩下$(k-1)(m+1)$个，那么留给对方又是(m+1)的整数倍，如此就可以保证先手取胜。&lt;/li>
&lt;/ol>
&lt;h2 id="结论">结论&lt;/h2>
&lt;p>当$n\mod(m+1)!=0$时，先手胜，否则后手胜。&lt;/p>
&lt;h1 id="威佐夫博弈">威佐夫博弈&lt;/h1>
&lt;h2 id="题目描述-1">题目描述&lt;/h2>
&lt;p>有两堆各若干个石子，两个人轮流从某一堆或者两堆中取同样多的物品，规定每次至少取一个，多着不限，最后取完石子的人获胜。&lt;/p>
&lt;h2 id="分析-1">分析&lt;/h2>
&lt;p>我们用$(a_k,b_k),a_k \leq b_k,k \in[0,n] $ 表示一种局势，先手必输的局势我们称为奇异局势，显然$(0,0)$是一种奇异局势。那么$(0,k),(k,k)$必然是非奇异局势，因为可以通过一步到达奇异局势。我们可以发现$(1,2)$不论如何操作都将成为非奇异局势，所以$(1,2)$是下一个奇异局势，所以$(1+k,2),(1,2+k),(1+k,2+k)$也都是非奇异局势，以此类推我们可以发现之后的几个奇异局势是$(3,5),(4,7),(6,10)$。&lt;/p>
&lt;p>通过观察我们可以发现$a_0=b_0=0,a_k$为前面没出现过的最小正整数，$b_k=a_k+k$。&lt;/p>
&lt;p>奇异局势有以下三条性质&lt;/p>
&lt;ol>
&lt;li>
&lt;p>任何正整数都包含在奇异局势中。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>任何操作都会将奇异局势变为非奇异局势。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>采取适当的操作可以将非奇异局势变为奇异局势。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>事实上，$a_n,b_n$是一对beatty数列。&lt;/p>
&lt;h2 id="beatty数列">Beatty数列&lt;/h2>
&lt;p>取两个无理数$\alpha,\beta$使得$\frac 1 \alpha+\frac1\beta=1$。&lt;/p>
&lt;p>一对Beatty数列就是$a_n=\lfloor n\alpha\rfloor,b_n=\lfloor n\beta\rfloor$。&lt;/p>
&lt;h2 id="rayleigh定理beatty定理">Rayleigh定理(Beatty定理)&lt;/h2>
&lt;p>$a_n,b_n$划分正整数，也就是说每个正整数只在两个数列中出现一次。&lt;/p>
&lt;p>我们再回到这个问题，
$$\because a_n+n=\lfloor n\alpha\rfloor+n=b_n=\lfloor n\beta \rfloor$$&lt;/p>
&lt;p>$$ \therefore \lfloor n \alpha \rfloor+n= \lfloor n \beta \rfloor$$&lt;/p>
&lt;p>$$ \therefore \lfloor n \alpha+n \rfloor= \lfloor n \beta \rfloor$$&lt;/p>
&lt;p>$$ \therefore \beta = \alpha+1$$&lt;/p>
&lt;p>根据$\frac 1 \alpha+\frac 1 {\alpha+1}=1$解得$\alpha=\frac {\sqrt 5+1} 2=\phi$。我们可得到通项$a_n=\lfloor n \phi \rfloor,b_n=a_n+n$&lt;/p>
&lt;p>对于任意局势$(x,y),x\leq y$我们只需判断$\lfloor (y-x)\phi\rfloor\stackrel{?}{=}x$&lt;/p>
&lt;h2 id="常见的几类问题">常见的几类问题&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>给出局势判断是否是奇异局势。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>给出局势$(x,y),x\leq y$，判断是否先手赢，若赢，给出第一步走法。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>例题：&lt;a href="https://cn.vjudge.net/problem/HDU-2177" target="_blank" rel="noopener">HDU-2177&lt;/a>&lt;/p>
&lt;p>先把所有奇异局势求出来，然后判断是不是，如果不是：&lt;/p>
&lt;ol>
&lt;li>先判断能否两堆同时取，设$k=y-x$ 判断$x-a_k?=y-b_k(x-a_k&amp;gt;0)$如果成立就可以同时取到$(a_k,b_k)$。&lt;/li>
&lt;li>判断取一堆的。先判断$x?=a_n\land y?&amp;gt;b_n$,如果成立就可以取到$(a_n,b_n)$,如果不成立那么$a=b_n$，此时$y&amp;gt;a_n$，所以可以取到$(a_n,b_n)$。&lt;/li>
&lt;/ol>
&lt;h1 id="nim博弈">Nim博弈&lt;/h1>
&lt;h2 id="题目描述-2">题目描述&lt;/h2>
&lt;p>有n堆石子，数量分别为$x_1,x_2,&amp;hellip;,x_n$每人每次可在任意一堆中取走任意数量（不少于1）的石子。&lt;/p>
&lt;h2 id="结论-1">结论&lt;/h2>
&lt;p>Nim游戏中先手必败当且仅当$x_1XOR x_2XOR&amp;hellip;XORx_n=0$时&lt;/p>
&lt;h2 id="扩展">扩展&lt;/h2>
&lt;p>事实上，我们可以将Nim游戏视做多个子游戏的合集，根据Nim定理，总游戏的sg值等于所有子游戏的sg值的异或和。&lt;/p>
&lt;h2 id="证明">证明&lt;/h2>
&lt;p>异或有一条性质,$xXORy=xXORz \implies y=z$，根据sg的定义，子游戏走一步，sg值必然发生改变，根据异或的性质所以总游戏的sg值也一定发生改变，0一定会变成非0，非0经过某一步可以变成0，所以当且仅当和游戏的sg为0时，先手必输，因为后手总可以控制sg值回到0。&lt;/p>
&lt;p>例题：&lt;a href="https://cn.vjudge.net/problem/HDU-2176" target="_blank" rel="noopener">HDU-2176&lt;/a>&lt;/p></description></item></channel></rss>